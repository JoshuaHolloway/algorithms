// -You are given two strings, str_1 and str_2,
//  where str_2 is generated by randomly shuffling str_1 and then adding one letter at a random position.

// Write a function that returns the letter that was added to str_2.

// Examples:
// solution(str_1 = "bcde", str_2 = "bdcef") -> "f"
// solution(str_1 = "", str_2 = "z") -> "z"
// solution(str_1 = "b", str_2 = "bb") -> "b"
// solution(str_1 = "bf", str_2 = "bfb") -> "b"

// Notes:
// str_1 and str_2 both consist of only lowercase alpha characters.

// ==============================================

function solution(str_1, str_2) {
  // Assumptions:
  //  -The first array has all unique characters.
  //    --THIS ASSUMPTION IS WRONG!!!

  // Step 1: Find unique characters in each array
  let map1 = {};
  for (char of str_1) {
    map1[char] = char;
  }

  let map2 = {};
  let non_unique_char;
  for (char of str_2) {
    if (map2[char]) {
      non_unique_char = char;
    }

    map2[char] = char;
  }

  console.log('map1: ', map1, '\tmap2: ', map2);

  // Step 2: Convert to arrays for easier comparison in following steps
  const arr1 = Object.values(map1);
  const arr2 = Object.values(map2);

  // Step 3: Handle edge case of same number unique elements (general case of first edge-case).
  //         -The added character must be the duplicate element of str_2 (under assumption of str_1 has unique characters)
  if (arr1.length === arr2.length) {
    return non_unique_char;
  }

  // Step 4: Handle the general case (if charcter added in str_2 is not in str_1)
  //         (find the character that exists in str_2 but not in str_1)
  for (let char in map2) {
    if (map1[char] !== map2[char]) {
      return char;
    }
  }
}

// ==============================================

// solution(str_1 = "bcde", str_2 = "bdcef") -> "f"
console.log(solution('bcde', 'bdcef'));

// solution(str_1 = "", str_2 = "z") -> "z"
console.log(solution('', 'z'));

// solution(str_1 = "b", str_2 = "bb") -> "b"
console.log(solution('b', 'bb'));

// solution(str_1 = "bf", str_2 = "bfb") -> "b"
console.log(solution('bf', 'bfb'));

// solution(str_1: "xqmxtheyvpdqounqmfyaqdqxwe", str_2: "ounxtheyqxqmvpdqmfyaqxdqxwe") -> x
console.log(
  solution('xqmxtheyvpdqounqmfyaqdqxwe', 'ounxtheyqxqmvpdqmfyaqxdqxwe')
);
